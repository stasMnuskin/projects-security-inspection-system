/api/users/register:
  post:
    summary: Register a new user
    tags: [Users]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - username
              - email
              - password
              - role
            properties:
              username:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
                format: password
              role:
                type: string
                enum: [admin, security_officer, technician, inspector]
    responses:
      201:
        description: User registered successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      400:
        description: Bad request

/api/users/login:
  post:
    summary: Login user
    tags: [Users]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - email
              - password
            properties:
              email:
                type: string
                format: email
              password:
                type: string
                format: password
    responses:
      200:
        description: Login successful
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      401:
        description: Invalid credentials

/api/users/me:
  get:
    summary: Get current user
    tags: [Users]
    security:
      - bearerAuth: []
    responses:
      200:
        description: Successful response
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      401:
        description: Unauthorized

/api/users/update:
  put:
    summary: Update user profile
    tags: [Users]
    security:
      - bearerAuth: []
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
                format: email
              password:
                type: string
                format: password
    responses:
      200:
        description: User updated successfully
      400:
        description: Bad request
      401:
        description: Unauthorized

/api/users:
  get:
    summary: Get all users (admin only)
    tags: [Users]
    security:
      - bearerAuth: []
    responses:
      200:
        description: Successful response
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      401:
        description: Unauthorized
      403:
        description: Forbidden

/api/users/{id}:
  delete:
    summary: Delete user (admin only)
    tags: [Users]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    responses:
      200:
        description: User deleted successfully
      401:
        description: Unauthorized
      403:
        description: Forbidden
      404:
        description: User not found

/api/users/{id}/role:
  put:
    summary: Change user role (admin only)
    tags: [Users]
    security:
      - bearerAuth: []
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: integer
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - role
            properties:
              role:
                type: string
                enum: [admin, security_officer, technician, inspector]
    responses:
      200:
        description: User role updated successfully
      400:
        description: Bad request
      401:
        description: Unauthorized
      403:
        description: Forbidden
      404:
        description: User not found